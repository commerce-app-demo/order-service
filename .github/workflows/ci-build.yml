name: "Docker Image Build"
  
on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types:
      - opened
      - synchronize
      - reopened
    
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      packages: write
    env:
      app_name: commerce-app-demo
      service_name: order-service
      registry_host: ghcr.io
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set GOPRIVATE
        run: echo "GOPRIVATE=github.com/commerce-app-demo/*" >> $GITHUB_ENV
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  

      - name: Staging Order Service Docker Image
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.registry_host }}/${{ env.app_name }}/${{ env.service_name }}/order-service-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            git_credentials=https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com

      - name: Production Order Service Docker Image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.registry_host }}/${{ env.app_name }}/${{ env.service_name }}/main-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            git_credentials=https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com
